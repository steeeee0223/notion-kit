{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:component",
  "title": "Button",
  "dependencies": ["@radix-ui/react-slot", "class-variance-authority"],
  "files": [
    {
      "path": "/Users/shihwen.yu/Documents/workspace/notion-kit/packages/shadcn/src/button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\n\nimport { cn } from \"@notion-kit/cn\";\n\nimport { buttonVariants, type ButtonVariants } from \"./variants\";\n\nexport interface ButtonProps\n  extends React.ComponentProps<\"button\">,\n    ButtonVariants {\n  asChild?: boolean;\n}\n\nconst Button = ({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: ButtonProps) => {\n  const Comp = asChild ? Slot : \"button\";\n  return (\n    <Comp\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  );\n};\nButton.displayName = \"Button\";\n\nexport { Button };\n",
      "type": "registry:component",
      "target": "core/button.tsx"
    },
    {
      "path": "/Users/shihwen.yu/Documents/workspace/notion-kit/packages/shadcn/src/variants.ts",
      "content": "import type { VariantProps } from \"class-variance-authority\";\nimport { cva } from \"class-variance-authority\";\n\nexport const buttonVariants = cva(\n  \"inline-flex animate-bg-in cursor-pointer items-center justify-center rounded-sm text-sm font-normal whitespace-nowrap select-none hover:bg-primary/5 focus-visible:outline-hidden disabled:cursor-not-allowed disabled:bg-transparent disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        primary: \"border border-border-button\",\n        icon: \"size-9 rounded-md border border-border-button text-icon\",\n        \"nav-icon\": \"size-7 text-icon\",\n        link: \"text-primary underline-offset-4 hover:bg-transparent hover:underline dark:text-primary/80\",\n        blue: \"border border-border bg-blue font-medium text-white shadow-xs hover:bg-blue-hover hover:text-white disabled:bg-blue\",\n        \"soft-blue\":\n          \"bg-blue/5 text-blue shadow-xs hover:bg-blue/15 disabled:bg-blue/5\",\n        hint: \"font-medium text-muted\",\n        red: \"border border-red/50 text-red hover:bg-red/10 focus:bg-red/10\",\n        \"red-fill\":\n          \"bg-red text-white hover:bg-red/65 disabled:bg-red dark:hover:bg-red/35\",\n        white: \"border border-white text-white\",\n        /**\n         * For close icon only\n         */\n        close:\n          \"flex size-[18px] shrink-0 rounded-full bg-primary/5 hover:bg-primary/15 dark:hover:bg-primary/0\",\n      },\n      size: {\n        xs: \"h-6 px-1.5 text-xs\",\n        sm: \"h-8 px-3\",\n        md: \"h-9 px-4 py-2\",\n        lg: \"h-10 rounded-md px-8\",\n        circle: \"rounded-full\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n    },\n  },\n);\nexport type ButtonVariants = VariantProps<typeof buttonVariants>;\n\nexport const menuItemVariants = cva(\n  [\n    \"mx-1 flex min-h-7 w-[calc(100%-8px)] animate-bg-in cursor-pointer items-center rounded-md px-2 text-sm/[1.2] text-primary select-none hover:bg-primary/5 focus-visible:outline-hidden dark:text-primary/80\",\n    \"[&_svg]:block [&_svg]:shrink-0\",\n  ],\n  {\n    variants: {\n      variant: {\n        secondary: \"text-secondary\",\n        warning: \"hover:text-red\",\n        error: \"text-red\",\n      },\n      inset: { true: \"pl-8\" },\n      disabled: {\n        true: \"pointer-events-none cursor-not-allowed opacity-50 hover:bg-transparent\",\n      },\n    },\n    defaultVariants: {},\n  },\n);\nexport type MenuItemVariants = VariantProps<typeof menuItemVariants>;\n\nexport const inputVariants = cva(\n  \"relative flex h-7 w-full cursor-text items-center rounded-md bg-input/60 px-1.5 py-[3px] text-sm text-primary transition-colors dark:bg-input/5 dark:text-primary/80 [&_input]:block [&_input]:w-full [&_input]:bg-transparent [&_input]:p-0 [&_input]:text-inherit\",\n  {\n    variants: {\n      variant: {\n        default: \"ring-1 ring-ring ring-inset focus-within:notion-focus-within\",\n        /**\n         * default style but not focusable\n         */\n        plain: \"ring-1 ring-ring ring-inset\",\n        /**\n         * transparent and without border\n         */\n        flat: \"bg-transparent dark:bg-transparent\",\n      },\n    },\n    defaultVariants: { variant: \"default\" },\n  },\n);\nexport type InputVariants = VariantProps<typeof inputVariants>;\n\nexport const contentVariants = cva(\n  \"border border-border focus-visible:outline-hidden\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        modal:\n          \"fixed top-[50%] left-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 bg-modal p-6 shadow-lg duration-200 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=closed]:zoom-out-95 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] data-[state=open]:zoom-in-95\",\n        popover:\n          \"z-50 rounded-md bg-popover shadow-md data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\",\n        tab: \"border-none bg-popover data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[state=open]:animate-in data-[state=open]:fade-in-0 data-[state=open]:zoom-in-95\",\n        tooltip:\n          \"relative z-50 overflow-hidden border-none bg-tooltip font-medium text-white/90 shadow-md backdrop-filter-none animate-in fade-in-0 zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 dark:text-primary/80\",\n      },\n    },\n    defaultVariants: { variant: \"default\" },\n  },\n);\nexport type ContentVariants = VariantProps<typeof contentVariants>;\n\nexport const separatorVariants = cva(\"-mx-1 my-1 h-px bg-primary/10\");\nexport type SeparatorVariants = VariantProps<typeof separatorVariants>;\n\nexport const groupVariants = cva(\"flex flex-col gap-px py-1\");\n",
      "type": "registry:component",
      "target": "core/variants.ts"
    }
  ]
}
